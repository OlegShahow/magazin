@import "null.scss";

// подключать только если есть в этих файлах данные. пустыми не подключать !!
// @import "var.scss";
@import "basestyle.scss";

@function toRem($value) {
	$baseFontSize: 16;
	@return ($value/$baseFontSize) * 1rem;
}

$maxWidth: 1920;

@mixin adaptiveValue($property, $pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$addMobSize: $addSize + $addSize * 0.7;

	@media (min-width: toRem(1920)) {
		#{$property}: #{$pcSize + px};
	}

	@media (max-width: toRem(1920)) {
		@media (max-width: 1920px) {
			#{$property}: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 767px) / #{$maxWidth}));
		}
	}
}
// @include adaptiveValue ($property , $pcSize, $mobSize);

[class*="__container"] {
	max-width: 1680px;
	height: 100%;
	padding: 50px 20px;
	margin: 0 auto;
}

// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

.reed {
	margin: toRem(10) 0 0 toRem(10);
	& p {
		color: #d9597b;
		font-size: toRem(24);
		font-weight: bold;
	}
}

.open {
	width: toRem(50);
	display: none;
	@media (max-width: toRem(970)) {
		display: block;
		margin-top: toRem(20);
		margin-left: toRem(20);
	}
}
.header__container {
	position: relative;
	position: fixed;
	top: 0;
	left: 50%;
	transform: translate(-50%);
	width: 100%;
	height: toRem(70);
	// @include adaptiveValue("height", 70, 100);
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-wrap: wrap;
	gap: toRem(10);
	backdrop-filter: blur(40px);

	@media (max-width: toRem(970)) {
		position: absolute;
		margin-top: -150vh;
		width: 100%;
		height: 100vh;
		flex-direction: column;
		justify-content: center;
		row-gap: toRem(50);
		overflow: auto;
		background-color: #51b687;
		transition: 0.5s ease-in-out;
	}
}
.kr {
	position: absolute;
	top: toRem(20);
	right: toRem(20);
	width: toRem(50);
	display: none;
	@media (max-width: toRem(970)) {
		display: block;
	}
}
.wrapper {
	&__container {
		@include adaptiveValue("margin-top", 200, 70);
		display: flex;
		flex-direction: column;
		align-items: center;
		row-gap: toRem(30);
		background-color: #fff;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
		border-radius: 8px;
	}
	& h2 {
		color: #d9597b;
		font-size: toRem(70);
		// @include adaptiveValue("font-size", 70, 30);
		font-weight: 900;
		text-shadow:
			0px 0px 2px white,
			2px 2px 2px #d9597b;
	}
}
.buck {
	display: inline-block;
	padding: 10px 20px;
	background-color: #4caf50;
	color: #fff;
	font-size: toRem(16);
	text-align: center;
	text-decoration: none;
	border: none;
	border-radius: 5px;
	font-size: toRem(20);
	cursor: pointer;

	&:hover {
		background-color: #45a049;
	}
	@media (max-width: toRem(970)) {
		font-size: toRem(30);
	}
}
.cart,
.cart-inbox,
.cart-wedd,
.cart-paper {
	width: 100%;
	display: flex;
	// flex-direction: row;
	flex-wrap: wrap; /* Позволяет карточкам переходить на следующую строку */
	gap: 20px; /* Пробел между карточками */
	box-sizing: border-box; /* Чтобы учитывать padding и border */

	box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.1);
}
.cart-items,
.cart-itemsb,
.cart-itemsp,
.cart-itemsw {
	/* Стили для блока всех карточек */
	width: 100%;
	height: auto; /* Высота будет зависеть от содержимого */
	text-align: center;
	display: flex;
	// flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
	row-gap: toRem(20);
	justify-content: flex-start;
	gap: toRem(20);
	padding: toRem(20);
	// border: 1px solid white;
	box-sizing: border-box; /* Чтобы учитывать padding и border */

	& p {
		font-size: toRem(30);
	}
}

/* Стиль для одного товара в корзине  "карточка" */
.cart-item,
.cart-itemb,
.cart-itemw,
.cart-itemp {
	width: toRem(300);
	background-color: #f9f9f9;
	border-radius: 8px;
	padding: 15px;
	display: flex;
	flex-direction: column;
	gap: 10px;
	box-shadow: 0 0px 14px #4caf50;
	& p {
		font-weight: bold;
	}
	& button {
		font-size: toRem(16);
	}
}

/* Стили для классов в карточке ( подписаны в скрипте ) */
.name,
.nameb,
.namew,
.price,
.pricew,
.priceb,
.pricep,
.namep {
	color: #4caf50;
	text-decoration: underline;
}

/* Стили для кнопки удаления */
.remove-from-cart,
.remove-from-cartb,
.remove-from-cartw,
.remove-from-cartp {
	margin-top: toRem(30);
	padding: 8px 16px;
	background-color: #ff4040;
	color: white;
	border: none;
	border-radius: 5px;
	cursor: pointer;
	width: fit-content;
	align-self: flex-start;
	&:hover {
		background-color: #e03e3e;
	}
}

/* Итоговая цена */
.cart-total {
	display: flex;
	justify-content: space-between;
	font-size: 18px;
	font-weight: bold;
	color: #333;
	& p {
		font-size: toRem(30);
	}
}
/* Общая стоимость корзины */
.total-price {
	color: #4caf50;
	font-size: toRem(30);
}

.go {
	& button {
		padding: toRem(10);
		background-color: #51b687;
		font-size: toRem(24);
		font-weight: bold;
		color: white;
		&:hover {
			box-shadow: 0px 0px 6px #1a711d;
		}
	}
}

// -----------------------------------------------------------------------------------------------

.inserver {
	padding: toRem(30);
	text-align: center;
	// border: 1px solid black;

	&__text {
		& p {
			font-size: toRem(30);
			margin-bottom: toRem(30);
		}
	}
	&__fio {
		width: 100%;
		display: flex;
		flex-direction: column;
		align-items: center;
		row-gap: toRem(20);
		padding: toRem(30);
		box-shadow: inset 0px 0px 6px #eae3e3;
		& label {
			margin-bottom: toRem(20);
			font-size: toRem(30);
		}
		& input {
			width: toRem(300);
			font-size: toRem(26);
			// background-color: #eae3e3;
			padding: toRem(10);
			box-shadow: inset 0px 0px 6px #eae3e3;
		}
		/* Стили для placeholder */
		& input::placeholder {
			color: #888; /* Цвет текста */
			font-style: italic; /* Курсив */
			font-size: toRem(20); /* Размер шрифта */
		}
	}
}
